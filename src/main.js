// Generated by CoffeeScript 2.5.1
var store;

import Vue from 'vue';

import Vuex from "vuex";

import App from './App.vue';

import vuetify from './plugins/vuetify';

import VueSocketIO from "vue-socket.io";

Vue.use(Vuex);

store = new Vuex.Store({
  state: {
    count: 1,
    isQuestion: false,
    question: {},
    button: true,
    listOfAttempts: []
  },
  mutations: {
    increment: function(state) {
      state.count++;
    },
    tried: function(state, p) {
      return state.question.triedID = p;
    },
    SOCKET_newQuestion: function(s, p) {
      console.log(p);
      s.isQuestion = true;
      s.question = Object.assign({}, p);
    },
    SOCKET_checkedQuestion: function(s, p) {
      var i, j, len, len1, ref, ref1, ref2, x;
      // console.log(p)
      // s.listOfAttempts.push(p)
            if ((ref = p.correct) != null) {
        ref;
      } else {
        s.isRight = {
          true: s.isWrong = true
        };
      };
      ref1 = s.question.answers;
      for (i = 0, len = ref1.length; i < len; i++) {
        x = ref1[i];
        if (x.id === p.aID) {
          x.isRight = true;
        }
      }
      ref2 = s.question.answers;
      for (j = 0, len1 = ref2.length; j < len1; j++) {
        x = ref2[j];
        if (x.id === p.gID) {
          x.isWrong = true;
        }
      }
      console.log(s);
      console.log(p);
    },
    SOCKET_news: function(s, p) {
      console.log(p);
    },
    disableButton: function(s) {
      s.button = false;
    }
  }
});

Vue.config.productionTip = false;

Vue.use(new VueSocketIO({
  debug: true,
  connection: 'https://gimkit-backend.glitch.me/',
  vuex: {
    store: store,
    actionPrefix: 'SOCKET_',
    mutationPrefix: 'SOCKET_'
  }
}));

new Vue({
  vuetify,
  store,
  render: function(h) {
    return h(App);
  }
}).$mount("#app");

//# sourceMappingURL=main.js.map
