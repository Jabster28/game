{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA;;AAAA,OAAO,GAAP,MAAA;;AACA,OAAO,IAAP,MAAA;;AACA,OAAO,GAAP,MAAA;;AACA,OAAO,OAAP,MAAA;;AACA,OAAO,WAAP,MAAA;;AAEA,GAAG,CAAC,GAAJ,CAAQ,IAAR;;AACA,KAAA,GAAQ,IAAK,IAAI,CAAC,KAAV,CACN;EAAA,KAAA,EACE;IAAA,KAAA,EAAO,CAAP;IACA,UAAA,EAAY,KADZ;IAEA,QAAA,EAAU,CAAA,CAFV;IAGA,MAAA,EAAQ,IAHR;IAIA,cAAA,EAAgB;EAJhB,CADF;EAMA,SAAA,EACE;IAAA,SAAA,EAAW,QAAA,CAAC,KAAD,CAAA;MACT,KAAK,CAAC,KAAN;IADS,CAAX;IAGA,KAAA,EAAO,QAAA,CAAC,KAAD,EAAQ,CAAR,CAAA;aACL,KAAK,CAAC,QAAQ,CAAC,OAAf,GAAyB;IADpB,CAHP;IAKA,kBAAA,EAAoB,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;MAClB,OAAO,CAAC,GAAR,CAAY,CAAZ;MACA,CAAC,CAAC,UAAF,GAAe;MACf,CAAC,CAAC,QAAF,GAAa,MAAM,CAAC,MAAP,CAAc,CAAA,CAAd,EAAkB,CAAlB;IAHK,CALpB;IAUA,sBAAA,EAAwB,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;AAC5B,UAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA;;;;;;QAEkB,CAAC,CAAC,OAAF,GAAY;UAAA,IAAA,EAAO,CAAC,CAAC,OAAF,GAAY;QAAnB;;AACxB;MAAA,KAAA,sCAAA;;YAAkD,CAAC,CAAC,EAAF,KAAQ,CAAC,CAAC;UAA5D,CAAC,CAAC,OAAF,GAAY;;MAAZ;AACA;MAAA,KAAA,wCAAA;;YAAkD,CAAC,CAAC,EAAF,KAAQ,CAAC,CAAC;UAA5D,CAAC,CAAC,OAAF,GAAY;;MAAZ;MAEA,OAAO,CAAC,GAAR,CAAY,CAAZ;MACA,OAAO,CAAC,GAAR,CAAY,CAAZ;IARsB,CAVxB;IAoBA,WAAA,EAAa,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;MACX,OAAO,CAAC,GAAR,CAAY,CAAZ;IADW,CApBb;IAuBA,aAAA,EAAe,QAAA,CAAC,CAAD,CAAA;MACb,CAAC,CAAC,MAAF,GAAW;IADE;EAvBf;AAPF,CADM;;AAmCR,GAAG,CAAC,MAAM,CAAC,aAAX,GAA2B;;AAC3B,GAAG,CAAC,GAAJ,CAAQ,IAAI,WAAJ,CACN;EAAA,KAAA,EAAO,IAAP;EACA,UAAA,EAAY,mCADZ;EAEA,IAAA,EACE;IAAA,KAAA,EAAO,KAAP;IACA,YAAA,EAAc,SADd;IAEA,cAAA,EAAgB;EAFhB;AAHF,CADM,CAAR;;AAQA,IAAI,GAAJ,CAAQ;EACN,OADM;EAEN,KAFM;EAGN,MAAA,EAAQ,QAAA,CAAC,CAAD,CAAA;WACN,CAAA,CAAE,GAAF;EADM;AAHF,CAAR,CAKE,CAAC,MALH,CAKU,MALV",
  "sourcesContent": [
    "import Vue from 'vue'\nimport Vuex from \"vuex\"\nimport App from './App.vue'\nimport vuetify from './plugins/vuetify'\nimport VueSocketIO from \"vue-socket.io\"\n\nVue.use(Vuex)\nstore = new (Vuex.Store)(\n  state:\n    count: 1\n    isQuestion: false\n    question: {}\n    button: true\n    listOfAttempts: []\n  mutations:\n    increment: (state) ->\n      state.count++\n      return\n    tried: (state, p) ->\n      state.question.triedID = p\n    SOCKET_newQuestion: (s, p) ->\n      console.log p\n      s.isQuestion = true\n      s.question = Object.assign({}, p)\n      return\n    SOCKET_checkedQuestion: (s, p) ->\n      # console.log(p)\n      # s.listOfAttempts.push(p)\n      p.correct ? s.isRight = true : s.isWrong = true\n      x.isRight = true for x in s.question.answers when x.id is p.aID\n      x.isWrong = true for x in s.question.answers when x.id is p.gID \n        \n      console.log s\n      console.log p\n      return\n    SOCKET_news: (s, p) ->\n      console.log p\n      return\n    disableButton: (s) ->\n      s.button = false\n      return\n)\nVue.config.productionTip = false\nVue.use new VueSocketIO(\n  debug: true\n  connection: 'https://gimkit-backend.glitch.me/'\n  vuex:\n    store: store\n    actionPrefix: 'SOCKET_'\n    mutationPrefix: 'SOCKET_')\n\nnew Vue({\n  vuetify,\n  store,\n  render: (h) ->\n    h App\n}).$mount(\"#app\")\n\n"
  ]
}